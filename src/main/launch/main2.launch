<?xml version="1.0" ?>
<launch>
<!--include file = "$(find mapviz)/launch/mapviz.launch"/-->
  <!-- these are the arguments you can pass this launch file, for example paused:=true -->
  <arg name="paused" default="false"/>
  <arg name="use_sim_time" default="true"/>
  <arg name="gui" default="true"/>
  <arg name="headless" default="false"/>
  <arg name="debug" default="false"/>

  <!-- We resume the logic in empty_world.launch -->
  <include file="$(find gazebo_ros)/launch/empty_world.launch">
    <arg name="debug" value="$(arg debug)" />
    <arg name="gui" value="$(arg gui)" />
    <arg name="paused" value="$(arg paused)"/>
    <arg name="use_sim_time" value="$(arg use_sim_time)"/>
    <arg name="headless" value="$(arg headless)"/>
  </include>

  <!-- urdf xml robot description loaded on the Parameter Server-->  
  <param name="robot_description" command="$(find xacro)/xacro '$(find description)/urdf/description.urdf.xacro'" /> 

 <!-- Run a python script to the send a service call to gazebo_ros to spawn a URDF robot -->
  <node name="urdf_spawner" pkg="gazebo_ros" type="spawn_model" respawn="false" output="screen"
  args="-urdf -model robot_model -param robot_description"/> 

  <!-- start robot state publisher-->
  <!--node pkg="robot_state_publisher" type="robot_state_publisher" name="robot_state_publisher" output="screen" >
    <param name="publish_frequency" type="double" value="50.0" />
  </node-->
  



  <!-- Load joint controller configurations from YAML file to parameter server -->
  <rosparam file="$(find main)/config/ros_controllers2.yaml" command="load"/>

  <!-- Load the controllers -->
  <node name="controller_spawner" pkg="controller_manager" type="spawner" respawn="false" 
    output="screen" ns="/robot" args="joint_state_controller
                                      joint1_effort_controller 
                                          joint2_effort_controller"/>
                                         

  <!-- convert joint states to TF transforms for rviz, etc -->
  <node name="robot_state_publisher" pkg="robot_state_publisher" type="robot_state_publisher"
     output="screen">
    
    <remap from="/joint_states" to="/robot/joint_states" />
  </node>

 

  <!--node name="joint_state_publisher_gui" pkg="joint_state_publisher_gui" type="joint_state_publisher_gui" ></node--> 

  <node name="rviz" pkg="rviz" type="rviz" args="-d $(find main)/config/rviz.rviz">
  </node>
 

  
  
   
  <!--include file="$(find velocity_sender)/launch/velocity_sender.launch"/-->
  <!-- Run the ekf for map to odom config -->
  <!-- Run the map server -->
</launch>